import com.paydaybank.build.*

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        kotlin_version = '1.3.61'
    }
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath Libs.PluginURLs.android
        classpath Libs.PluginURLs.kotlin
        classpath Libs.PluginURLs.butterknife
        classpath Libs.PluginURLs.hilt
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url Libs.PluginURLs.jitpack }
        maven { url Libs.PluginURLs.sonatype }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {

            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = false

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
            freeCompilerArgs += "-Xuse-experimental=kotlin.ExperimentalStdlibApi"
            freeCompilerArgs += "-Xuse-experimental=kotlin.ExperimentalStdlibApi"

            // Set JVM target to 1.8
            jvmTarget = "1.8"

        }
    }

    afterEvaluate {

        dependencies {

            // Fragments
            implementation Libs.Fragment.core
            implementation Libs.Fragment.fragmentKtx

            // Views
            implementation Libs.View.material
            implementation Libs.View.constraintLayout
            implementation Libs.View.coil
            implementation Libs.View.coilSvg

            // MvRX
            implementation Libs.Mvrx.core

            // Logging
            implementation Libs.Logging.timber

            // Epoxy
            implementation Libs.Epoxy.epoxy
            implementation Libs.Epoxy.paging
            implementation Libs.Epoxy.dataBinding

            // Dagger
            implementation Libs.Dagger.hilt
            implementation Libs.Dagger.jetpack

            // Navigation
            implementation Libs.Nav.fragment
            implementation Libs.Nav.ktx

            // Image
            implementation Libs.Fresco.fresco
            implementation Libs.Fresco.fresco_gif

            // Network
            implementation Libs.OkHttp.okhttp
            implementation Libs.OkHttp.loggingInterceptor
            implementation Libs.Retrofit.retrofit
            implementation Libs.Retrofit.gsonConverter

            // Coroutines
            implementation Libs.Coroutines.core
            implementation Libs.Coroutines.android

            // Insets
            implementation Libs.Insetter.core
            implementation Libs.Insetter.kotlin
            implementation Libs.Insetter.widgets

            // Room
            implementation Libs.Room.core
            implementation Libs.Room.coroutines

            // Kapt
            kapt Libs.Epoxy.processor
            kapt Libs.Dagger.processor
            kapt Libs.Dagger.jetpackProcessor
            kapt Libs.Room.processor

        }

        kapt {
            correctErrorTypes true
        }

    }

}